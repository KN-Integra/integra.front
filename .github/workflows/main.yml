name: Preview Deployment

on:
  push:
    branches:
    - main
  workflow_dispatch:

jobs:
  sync_submodules:
    name: 'Submodules Sync'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.CI_TOKEN }}
        submodules: true
        fetch-depth: 0

  lint:
    name: 'Superlinter'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # Full git history is needed to get a proper list of changed files within `super-linter`
        fetch-depth: 0

    - name: Lint Code Base
      uses: github/super-linter/slim@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BRANCH: "main"
        VALIDATE_ALL_CODEBASE: false
        LINTER_RULES_PATH: "/"
        CSS_FILE_NAME: ".stylelintrc.yml"
        TYPESCRIPT_ES_CONFIG_FILE: ".eslintrc.yml"
        VALIDATE_TSX: true
        VALIDATE_TYPESCRIPT_ES: true
        VALIDATE_CSS: true

  security:
    name: Snyk Security
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Snyk
      uses: snyk/actions@0.4.0
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: monitor

  migrations:
    name: Run migrations
    runs-on: ubuntu-latest

    env:
      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}

    steps:
    - uses: actions/setup-node@v3
    - uses: actions/checkout@v3
    - run: ls
    - run: ls ./migrations
    - name: Install dependencies
      run: yarn install --immutable --immutable-cache --check-cache
    - name: Run migrations
      run: yarn migration
  vercel:
    name: Preview Deploy to Vercel
    runs-on: ubuntu-latest

    needs:
    - sync_submodules
    - lint
    - migrations
    - security

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}

      NUXT_JWT_SECRET: ${{ secrets.NUXT_JWT_SECRET }}
      NUXT_JWT_EXPIRES_IN: ${{ secrets.NUXT_JWT_EXPIRES_IN }}
      NUXT_JWT_ISSUER: ${{ secrets.NUXT_JWT_ISSUER }}

    steps:
    - uses: actions/checkout@v3
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=preview --token=${{ env.VERCEL_TOKEN }}
    - name: Install Required Packages
      run: npm install
    - name: Build Project Artifacts
      run: vercel build --token=${{ env.VERCEL_TOKEN }}
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --token=${{ env.VERCEL_TOKEN }}
